{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alokk\\\\OneDrive\\\\Desktop\\\\CS1010\\\\notepad\\\\src\\\\pages\\\\DoctorPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorPage = () => {\n  _s();\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n  const navigate = useNavigate();\n  const doctors = [\"Dr. Smith – Cardiology\", \"Dr. Jane – Neurology\", \"Dr. Kim – Pediatrics\"];\n  const handleConfirm = () => {\n    if (selectedDoctor) {\n      navigate(\"/appointment\");\n    } else {\n      alert(\"Please select a doctor.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4\",\n      children: \"Select a Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), doctors.map(doc => /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"doctor\",\n        value: doc,\n        onChange: e => setSelectedDoctor(e.target.value),\n        className: \"mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), doc]\n    }, doc, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirm,\n      className: \"mt-4 px-4 py-2 bg-emerald-700 text-white rounded\",\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorPage, \"cr8RvN2dT5sNfkj9J3z37tUbe3w=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorPage;\nexport default DoctorPage;\nexport {};\nvar _c;\n$RefreshReg$(_c, \"DoctorPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","DoctorPage","_s","selectedDoctor","setSelectedDoctor","navigate","doctors","handleConfirm","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doc","type","name","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alokk/OneDrive/Desktop/CS1010/notepad/src/pages/DoctorPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DoctorPage: React.FC = () => {\r\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const doctors = [\r\n    \"Dr. Smith – Cardiology\",\r\n    \"Dr. Jane – Neurology\",\r\n    \"Dr. Kim – Pediatrics\",\r\n  ];\r\n\r\n  const handleConfirm = () => {\r\n    if (selectedDoctor) {\r\n      navigate(\"/appointment\");\r\n    } else {\r\n      alert(\"Please select a doctor.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl mb-4\">Select a Doctor</h2>\r\n      {doctors.map((doc) => (\r\n        <label key={doc} className=\"block mb-2\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"doctor\"\r\n            value={doc}\r\n            onChange={(e) => setSelectedDoctor(e.target.value)}\r\n            className=\"mr-2\"\r\n          />\r\n          {doc}\r\n        </label>\r\n      ))}\r\n      <button\r\n        onClick={handleConfirm}\r\n        className=\"mt-4 px-4 py-2 bg-emerald-700 text-white rounded\"\r\n      >\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorPage;\r\nexport {};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,OAAO,GAAG,CACd,wBAAwB,EACxB,sBAAsB,EACtB,sBAAsB,CACvB;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIJ,cAAc,EAAE;MAClBE,QAAQ,CAAC,cAAc,CAAC;IAC1B,CAAC,MAAM;MACLG,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBV,OAAA;MAAIS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjDR,OAAO,CAACS,GAAG,CAAEC,GAAG,iBACfhB,OAAA;MAAiBS,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACrCV,OAAA;QACEiB,IAAI,EAAC,OAAO;QACZC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAEH,GAAI;QACXI,QAAQ,EAAGC,CAAC,IAAKjB,iBAAiB,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACnDV,SAAS,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,EACDE,GAAG;IAAA,GARMA,GAAG;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASR,CACR,CAAC,eACFd,OAAA;MACEuB,OAAO,EAAEhB,aAAc;MACvBE,SAAS,EAAC,kDAAkD;MAAAC,QAAA,EAC7D;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACZ,EAAA,CAzCID,UAAoB;EAAA,QAEPH,WAAW;AAAA;AAAA0B,EAAA,GAFxBvB,UAAoB;AA2C1B,eAAeA,UAAU;AACzB;AAAU,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}